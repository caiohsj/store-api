image: victorcostaoliveira/cucumber_jera:1.1.0

before_script:
  # - apt-get install libtag1-dev
  # Install ssh-agent if not already installed, it is required by Docker.
  # (change apt-get to yum if you use a CentOS-based image)
  - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
  # Run ssh-agent (inside the build environment)
  - eval $(ssh-agent -s)
  # Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
  - ssh-add <(echo "$SIF_PRIVATE_KEY")
  - ssh-add -l
  # To start rvm in docker image
  - source /usr/local/rvm/scripts/rvm
  # For Docker builds disable host key checking. Be aware that by adding that
  # you are suspectible to man-in-the-middle attacks.
  # WARNING: Use this only with the Docker executor, if you use it with shell
  # you will overwrite your user's SSH config.
  - mkdir -p ~/.ssh
  - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'

.only-default: &only-default
  only:
    - merge_requests
    - develop
    - master

variables:
  # Configure mysql environment variables (https://hub.docker.com/r/_/mysql/)
  MYSQL_DATABASE: nome_da_aplicacao_test
  MYSQL_ROOT_NAME: root
  MYSQL_ROOT_PASSWORD: root
  DANGER_GITLAB_API_TOKEN: yZ8FbwAp-RRSfsAZAY-B # To Danger bot

danger:
  only:
    - merge_requests
  script:
  - bundle install
  - bundle exec danger

cucumber:
  <<: *only-default
  script:
  - service mysql start
  - gem install bundler
  - cp config/database.gitlab-ci.yml config/database.yml
  - bundle install --path vendor
  - rails db:drop db:create db:migrate RAILS_ENV=test
  - bundle exec cucumber
  artifacts:
    paths:
      - results/

staging:
  type: deploy
  script:
  - gem install mina
  - mina deploy ENV=staging
  only:
  - develop
production:
  type: deploy
  script:
  - gem install mina
  - mina deploy ENV=production
  only:
  - master
cache:
  paths:
  - vendor/apt
  - vendor/ruby

