variables:
  MYSQL_DATABASE: <TEST_DB_NAME>
  MYSQL_ROOT_NAME: root
  MYSQL_ROOT_PASSWORD: root
  DANGER_GITLAB_API_TOKEN: yZ8FbwAp-RRSfsAZAY-B # To Danger bot
  RUBY_VERSION: <PROJECT_RUBY_VERSION>
  GEMSET_NAME: <GEMSET_NAME>

danger:
  image: <PROJECT_RUBY_VERSION>
  only:
    - merge_requests
  script:
    - gem install bundler
    - bundle install -j $(nproc) --path vendor/ruby
    - bundle exec danger
  cache:
    # https://docs.gitlab.com/ee/ci/caching/#sharing-caches-across-the-same-branch
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - vendor/ruby

cucumber:
  only:
    - merge_requests
    - develop
    - master
  image: victorcostaoliveira/jera_image:1.1.0
  script:
    - mv /usr/sbin/mysqld /usr/bin/mysqld
    - ln -nfs /usr/bin/mysqld /usr/sbin/mysqld
    - chown -R mysql:mysql /var/lib/mysql /var/run/mysqld
    - source /etc/profile.d/rvm.sh
    - service mysql start
    - apt-get update
    - apt-get -y install yarn
    - rvm install $RUBY_VERSION
    - rvm use $RUBY_VERSION@$GEMSET_NAME --create
    - gem install bundler
    - cp config/database.gitlab-ci.yml config/database.yml
    - bundle install -j $(nproc) --path vendor/ruby
    - bundle exec rails db:drop db:create db:migrate RAILS_ENV=test
    - bundle exec cucumber
  cache:
    # https://docs.gitlab.com/ee/ci/caching/#sharing-caches-across-the-same-branch
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - vendor/ruby

staging:
  image: mwallasch/docker-ruby-node
  type: deploy
  script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$SERVER_PRIVATE_KEY")
    - ssh-add -l
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - gem install mina
    - mina deploy ENV=staging
  only:
    - develop

production:
  image: mwallasch/docker-ruby-node
  type: deploy
  script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$SERVER_PRIVATE_KEY")
    - ssh-add -l
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - gem install mina
    - mina deploy ENV=production
  only:
    - master
